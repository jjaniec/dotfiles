#### Setup

#set -o errexit
#set -o pipefail
#set -o nounset
#set -o xtrace

ZPLUG_DIR=/zsh/zplug
ANTIGEN_DIR=/zsh/antigen
DOTFILES_DIR=
OS=$(uname -s)

setopt autocd # If only a directory is entered, cd there
setopt no_beep
setopt hist_ignore_dups
setopt long_list_jobs
setopt mark_dirs # Add "/" if completes directory
setopt autopushd

zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'	# Case insensitive auto-completion

# Load dotfiles location

if [ -z "$DOTFILES_DIR" ];
then
	stat /dotfiles > /dev/null 2>&1;
	if [ $? -ne 0 ];
	then
		export DOTFILES_DIR=~/dotfiles;
	else
		export DOTFILES_DIR=/dotfiles;
	fi;
fi;

# Source 42 specific dotfiles
if [ $(hostname | grep -E 'e[1-9]{1,2}r[1-9]{1,2}p[1-9]{1,2}.42.fr') ] && [ -f ~/42_dotfiles ];
then
	source ~/.brewconfig
	source ~/42_dotfiles/.zshrc
fi;

# Auto-update dotfiles if new commits found

if [ -n "$DOTFILES_DIR" ];
then
	DOTFILES_BRANCH=$(git -C $DOTFILES_DIR name-rev --name-only HEAD)

	git -C $DOTFILES_DIR fetch origin $DOTFILES_BRANCH > /dev/null 2>&1
	git -C $DOTFILES_DIR diff --exit-code master...origin/$DOTFILES_BRANCH > /dev/null 2>&1
	if [ $? != 0 ];
	then
		echo "\e[32mRemote has new commits ! Updating ...\e[39m"
		git -C $DOTFILES_DIR merge origin/$DOTFILES_BRANCH
	fi;
fi;

#### Zsh plugins ####

if [ -n "$DOTFILES_DIR" ];
then
	if command -v awk > /dev/null && ! [ $(hostname | grep -E 'e[1-9]{1,2}r[1-9]{1,2}p[1-9]{1,2}.42.fr') ];

	then
		export ZPLUG_HOME=${DOTFILES_DIR}${ZPLUG_DIR}/.zplug

		if ! [ -d ${ZPLUG_HOME} ];
		then
			git clone https://github.com/zplug/zplug ${ZPLUG_HOME}
		fi;

		source ${ZPLUG_HOME}/init.zsh
		zplug 'zplug/zplug', \
      hook-build:'zplug --self-manage'

		zplug "mafredri/zsh-async", \
      from:github, \
      depth:1
		zplug "sindresorhus/pure", \
      use:pure.zsh, \
      from:github, \
      as:theme, \
      depth:1

		zplug "zsh-users/zsh-autosuggestions", \
      from:github, \
      depth:1
		zplug "zsh-users/zsh-completions", \
      from:github, \
      depth:1
		zplug "zdharma/fast-syntax-highlighting", \
      from:github, \
      depth:1

		zplug "ahmetb/kubectl-aliases", \
      use:.kubectl_aliases
		zplug "plugins/aws", \
      from:oh-my-zsh
		zplug "djui/alias-tips", \
      from:github

		zplug "rupa/z", \
      from:github, \
      use:"z.sh", \
      depth:1

    zplug "b4b4r07/enhancd", \
      from:github, \
      use:"init.sh", \
      depth:1
    ENHANCD_FILTER=fzf:fzy

    zplug "raylee/tldr", \
      from:github, \
      as:command, \
      use:"tldr", \
      depth:1

    zplug "junegunn/fzf-bin", \
      from:gh-r, \
      as:command, \
      rename-to:fzf, \
      use:"*$(echo ${OS} | tr '[:upper:]' '[:lower:]')*amd64*"
    zplug "junegunn/fzf", \
      use:"shell/*.zsh", \
      defer:2
    zplug "junegunn/fzf", \
      use:"bin/fzf-tmux", \
      as:command, \
      defer:2

		zplug "Tarrasch/zsh-autoenv"

		zplug "lirantal/dockly", \
			from:github, \
			as:command, \
			use:"index.js", \
			rename-to:"dockly", \
			hook-build:"npm install", \
			depth:1, \
			if:"(( $+commands[npm] ))"

    zplug "paulirish/git-open", \
      as:plugin

    zplug "sharkdp/bat",\
      as:command, \
      from:gh-r, \
      rename-to:bat

		if [ "${OS}" = "Linux" ];
		then
      ;
		elif [ "${OS}" = "Darwin" ];
		then
      ;
		fi;

		if ! zplug check --verbose;
		then
		    echo;
			zplug install;
		fi;

		zplug load
	else
		if ! [ -f ${DOTFILES_DIR}${ANTIGEN_DIR}/antigen.zsh ];
		then
			git clone https://github.com/zsh-users/antigen ${DOTFILES_DIR}${ANTIGEN_DIR}
			git -C $DOTFILES_DIR$ANTIGEN_DIR checkout develop
		fi;
		git -C $DOTFILES_DIR$ANTIGEN_DIR fetch origin develop 2> /dev/null
		git -C $DOTFILES_DIR$ANTIGEN_DIR diff --exit-code origin/develop
		if [ $? != 0 ];
		then
			echo "\e[32mUpdating antigen...\e[39m"
			git -C $DOTFILES_DIR$ANTIGEN_DIR merge origin/develop
		fi;

		source $DOTFILES_DIR$ANTIGEN_DIR/antigen.zsh

		# Pure theme
		antigen bundle mafredri/zsh-async
		antigen bundle sindresorhus/pure

		# Additional features
		antigen bundle zsh-users/zsh-autosuggestions
		antigen bundle zsh-users/zsh-completions
		antigen bundle zdharma/fast-syntax-highlighting

		#antigen bundle sobolevn/wakatime-zsh-plugin

		# Additional commands
		antigen bundle eendroroy/zed-zsh

		antigen apply
	fi;
fi;

#### Git config ####

git config --global user.email "jjaniec@student.42.fr"
git config --global user.name "Joffrey Janiec"

# Global gitignore
git config --global core.excludesfile ${DOTFILES_DIR}/git/.gitignore

# Custom 'change-commits' alias -> see https://stackoverflow.com/questions/2919878/git-rewrite-previous-commit-usernames-and-emails
git config --global alias.change-commits '!'"f() { VAR=\$1; OLD=\$2; NEW=\$3; shift 3; git filter-branch --env-filter \"if [[ \\\"\$\`echo \$VAR\`\\\" = '\$OLD' ]]; then export \$VAR='\$NEW'; fi\" \$@; }; f "

if [ "${OS}" = "Linux" ];
then
	git config --global credential.helper cache;
elif [ "${OS}" = "Darwin" ];
then
	git config --global credential.helper osxkeychain;
fi;

#### Aliases and exports ####

preexec_functions=()

function expand_aliases {
  input_command=$1
  expanded_command=$2
  if [ $input_command != $expanded_command ] && alias | grep $1 > /dev/null 2>&1; then
    echo "\t'$1' -> '$expanded_command'"
  fi
}

preexec_functions+=expand_aliases

# Add dotfiles/bin to path
export PATH="$PATH:$DOTFILES_DIR/bin"

#export WAKATIME_HOME=$DOTFILES_DIR/zsh/.wakatime.cfg

alias glog="git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'"
alias psc="ps xawf -eo pid,user,cgroup,args"
alias vcat="/bin/cat"
alias kcn='kubectl config set-context --current --namespace'
alias kruncurl='kubectl run -it --restart=Never --rm --image=appropriate/curl curl --'

if [ "$(uname -s)" = "Linux" ];
then
	;
elif [ "$(uname -s)" = "Darwin" ];
then
	;
fi;

export AWS_DEFAULT_REGION='eu-west-1'

export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Enable bat preview for fzf
export FZF_DEFAULT_OPTS="--ansi --preview-window 'right:60%' --preview 'bat --color=always --style=header,grid --line-range :300 {}'"

# Enable coloration in less
export LESS_TERMCAP_mb=$'\E[01;32m'
export LESS_TERMCAP_md=$'\E[01;32m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;47;34m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;36m'
export LESS=-r

#### Scripts ####

# Add local dotfiles scripts to path
export PATH="$PATH:$DOTFILES_DIR/scripts"

# Source aws-cli auto-completion script
if command -v aws_zsh_completer.sh > /dev/null 2>&1;
then
	source aws_zsh_completer.sh
fi;

# Enable pyenv if present
if command -v pyenv > /dev/null 2>&1;
then
	eval "$(pyenv init -)"
	eval "$(pipenv --completion)"
fi;
